@model IEnumerable<EmployeeSys.Web.Models.EmployeeDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a class="btn btn-link btn-lg" onclick="ShowModel()">Add New Employee</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirsName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MiddleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmpNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Salary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Postion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DefaultDesc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatadDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </th>
            <th>

            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirsName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MiddleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmpNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Postion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DefaultDesc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item._CreatadDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item._ModifiedDate)
                </td>
                <td>
                    <button class="btn btn-primary update-link" type="button">Update</button>
                </td>
                <td>
                    <button class="btn btn-danger delete-link" onclick="deleteEmployee('@item.Id')" type="button">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    function deleteEmployee(id) {
        event.preventDefault(); // Prevent the default action (navigation)
        var row = $(event.target).closest('tr'); // Get the closest row

        if (confirm('Are you sure you want to delete this item?')) {
            $.ajax({
                url: '@Url.Action("DeleteEmployee", "Home")', // Your controller action URL
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(id), // Serialize the id as JSON
                success: function (result) {
                    alert('Employee deleted successfully.');
                    // Optionally, remove the item from the UI
                    row.remove();
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }
    }

  
</script>